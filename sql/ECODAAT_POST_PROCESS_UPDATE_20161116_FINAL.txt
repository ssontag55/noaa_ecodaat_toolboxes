 /*

last edit 2016NOV18 by KBahl 
ecodaat_post_process_update.sql provided by ASA 2015MAR25.

  Revised by KYB 2015NOV05 to correct fished depth math equation to calculate LARVALCATCHPER10M2
  Added revised chlorophyll calculations script to the very end of page - 2016Feb02 created by ASA
  Changed DIS_PERVOLM3 and DIS_PERVOLM = 0 to  = NULL and scale from 4 to 10 - 2016FEB04	
  Added NUMBER_MEASURED_COUNTED =9999 commmand line for biomass calculations - 2016Feb12 KBahl 
  Added b.MIN_GEAR_DEPTH to table subspecimen_main_geom so that LARVALCATCHPER10M2 value can be calculated. - 2016FEB17 KBahl
  Added ZOOP_EUPHAUSIID_EGG='Y' and ZOOP_COPEPOD_NAUPLlII='Y' to SPECIMEN - 2016Oct03 KBahl


NOAA 2013
ECODAAT script
This is to be run anytime there is an update or data loading.
This will update all corresponding tables and create linked tables.
*/


/*
HAUL UPDATE
*/
UPDATE HAUL SET GEOM = SDO_GEOMETRY(2001, 8307, SDO_POINT_TYPE(LON, LAT , NULL), NULL, NULL)
WHERE LON IS NOT NULL;

ALTER TABLE HAUL
ADD SE_ANNO_CAD_DATA BLOB;
COMMIT;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'HAUL' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('HAUL', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 

COMMIT;

DROP INDEX HAUL_IX_GEOM;
CREATE INDEX HAUL_IX_GEOM ON HAUL(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;

COMMIT;


/*
SEACAT UPDATE
*/
UPDATE SEACAT_CTD SET GEOM = SDO_GEOMETRY(2001, 8307, SDO_POINT_TYPE(LON, LAT , NULL), NULL, NULL)
WHERE LON IS NOT NULL;


DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'SEACAT_CTD' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('SEACAT_CTD', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 

DROP INDEX SEACAT_CTD_IX_GEOM;
CREATE INDEX SEACAT_CTD_IX_GEOM ON SEACAT_CTD(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;

COMMIT;


/* haul - sample relationship Updator */


DROP VIEW HAUL_GEAR_VIEW;
CREATE VIEW HAUL_GEAR_VIEW AS SELECT A.GEAR_ID, A.FOCI_GEAR_ID,A.GEAR_CODE,A.GEAR_NAME,A.GEAR_ABBREV,A.MOUTH_AREA,A.NET_INFO,A.DOOR_DIMENSIONS,A.DESCRIPTION,A.PURPOSE_ID,B.HAUL_ID,B.CRUISE,B.H_ID,B.ALT_STATION_NAME,B.HAUL_NAME,B.NET,B.FOCI_GRID,B.BOTTOM_DEPTH,B.CTD_ID,B.HAUL_PERFORMANCE,B.MESH,B.LAT,B.LON,B.PURPOSE,B.PRIMARY_NET,B.MIN_GEAR_DEPTH,B.MAX_GEAR_DEPTH,B.MIN_WIRE_OUT,B.MAX_WIRE_OUT,B.TOW_MINUTES,B.TOW_SECONDS,B.VOLUME_FILTERED,B.WIRE_ANGLE,B.ORIG_DB,B.DOOR,B.GEOM,B.DOOR_HEIGHT,B.DOOR_WIDTH,B.DIEL,B.NET_PATH,B.GEOGRAPHIC_AREA,B.NETMOUTH_HEIGHT_M,B.SEA_SURFACE_TEMP_C,B.TRAWL_DEPLOYED_LAT,B.TRAWL_DEPLOYED_LON,B.WATER_TEMP_AT_GEAR_DEPTH,B.GMT_DATE_TIME,B.GMT_DATE_TIME_END,B.TRAWL_DEPLOYED_GMT,B.TRAWL_HAULBACK_START_GMT,B.COMMENTS_HAUL,B.FLOWMETER_REVS,B.FLOWMETER,B.POLYGONAL_AREA,B.CRUISE_ID,B.STATION_NAME,B.LON_END,B.LAT_END,B.TRAWL_HAULBACK_START_LAT,B.TRAWL_HAULBACK_START_LON,B.MONTH,B.YEAR,B.DAY FROM HAUL B, GEAR A WHERE A.GEAR_ID = B.GEAR_ID;



DROP VIEW HAUL_CRUISE_VIEW;
CREATE VIEW HAUL_CRUISE_VIEW AS SELECT A.*,B.CRUISE_NAME,B.SHIP_CRUISE_NAME,B.SHIP_NAME FROM CRUISE B, HAUL_GEAR_VIEW A WHERE A.CRUISE_ID = B.CRUISE_ID;



DROP VIEW SAMPLE_DICT_VIEW;
CREATE VIEW SAMPLE_DICT_VIEW AS SELECT A.SAMPLE_ID,A.COMMENTS_SAMPLES,A.MOUTH_AREA_TRAWL,A.CPUE,A.TRAWL_CATCH,A.VOLUME_FISHED,A.DISTANCE_FISHED_0,A.DISTANCE_FISHED_1,A.EQUILIBRIUM,A.VOLUME_DISPLACEMENT,A.HAUL_ID,A.H_ID,A.FOCI_SAMPLE_ID,A.GENETICS_ID,A.MULTIPLE_REQ,A.NUMBER_OF_BAGS,A.NUMBER_OF_JARS,A.NUMBER_SAMPLED,A.ORIG_DB,A.PRESERVE_ID,A.SPECIES_CODE_ID,A.SUBSAMPLE_NUMBER,A.SUBSAMPLE_WEIGHT,A.TOTAL_NUMBER,A.NON_SUBSAMPLE_WEIGHT,A.UNITS,A.VIAL_NUMBER,A.WEIGHT_UNITS,A.SAMPLE_DICT_ID,A.COMMON_NAME,A.PROJECT,A.SAMPLE_TYPE,A.PI_COMPONENT,A.PROJECT_CODE,A.ICH_PROC,A.ZOOP_PROC,A.PHYTO_ASSESS_ID,A.CRATE_NUMBER,A.SHIPMENT,A.POLAND_NOTES,B.SAMPLE_DESC,B.SAMPLE_ABBREV
FROM SAMPLES A LEFT JOIN SAMPLES_DICT B 
ON B.SAMPLE_DICT_ID = A.SAMPLE_DICT_ID;



DROP VIEW SAMPLE_PHYTO_VIEW;
CREATE VIEW SAMPLE_PHYTO_VIEW AS SELECT
A.*,B.PHYTO_ASSESS
FROM SAMPLE_DICT_VIEW A LEFT JOIN PHYTO_ASSESS B
ON B.PHYTO_ASSESS_ID=A.PHYTO_ASSESS_ID;


DROP TABLE SAMPLE_HAUL;
CREATE TABLE SAMPLE_HAUL AS SELECT A.*,B.COMMENTS_SAMPLES,B.SAMPLE_ID,B.VOLUME_DISPLACEMENT,B.FOCI_SAMPLE_ID,B.MULTIPLE_REQ,B.NUMBER_OF_BAGS,B.NUMBER_OF_JARS,B.NUMBER_SAMPLED,B.ORIG_DB AS SAMPLE_ORIG_DB,B.PRESERVE_ID,B.COMMON_NAME,B.SPECIES_CODE_ID,B.SUBSAMPLE_NUMBER,B.SUBSAMPLE_WEIGHT,B.TOTAL_NUMBER,B.NON_SUBSAMPLE_WEIGHT,B.VIAL_NUMBER,B.WEIGHT_UNITS,B.SAMPLE_DICT_ID,B.PROJECT,B.PI_COMPONENT,B.PROJECT_CODE,B.SAMPLE_TYPE,B.SAMPLE_DESC,B.SAMPLE_ABBREV,B.MOUTH_AREA_TRAWL,B.CPUE,B.TRAWL_CATCH,B.VOLUME_FISHED,B.DISTANCE_FISHED_0,B.DISTANCE_FISHED_1,B.EQUILIBRIUM,
B.ICH_PROC,B.ZOOP_PROC,B.PHYTO_ASSESS_ID,B.PHYTO_ASSESS,B.CRATE_NUMBER,B.SHIPMENT,B.POLAND_NOTES
FROM HAUL_CRUISE_VIEW A LEFT OUTER JOIN SAMPLE_PHYTO_VIEW B ON A.H_ID = B.H_ID;

DELETE FROM SAMPLE_HAUL
WHERE SAMPLE_ID IS NULL;


COMMIT;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'SAMPLE_HAUL' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('SAMPLE_HAUL', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;


/* TRAWL Calculations */
UPDATE SAMPLE_HAUL 
SET TRAWL_CATCH = (SUBSAMPLE_WEIGHT + NON_SUBSAMPLE_WEIGHT) *(SUBSAMPLE_NUMBER/SUBSAMPLE_WEIGHT) WHERE SUBSAMPLE_WEIGHT !=0;
UPDATE SAMPLES
SET TRAWL_CATCH =0 WHERE SUBSAMPLE_WEIGHT = 0;
COMMIT;

UPDATE SAMPLE_HAUL
SET TRAWL_DEPLOYED_LON = 0 WHERE TRAWL_DEPLOYED_LON IS NULL;
UPDATE SAMPLE_HAUL
SET TRAWL_DEPLOYED_LAT= 0 WHERE TRAWL_DEPLOYED_LAT IS NULL;

UPDATE SAMPLE_HAUL
SET LON_END = 0 WHERE LON_END IS NULL;
UPDATE SAMPLE_HAUL
SET LAT_END = 0 WHERE LAT_END IS NULL;

COMMIT;

UPDATE SAMPLE_HAUL
SET DISTANCE_FISHED_0 = SDO_GEOM.SDO_DISTANCE(SDO_GEOMETRY
(2001,4326,NULL,SDO_ELEM_INFO_ARRAY(1, 1, 1),
SDO_ORDINATE_ARRAY(LON_END, LAT_END)),
SDO_GEOMETRY
(2001,4326,NULL,SDO_ELEM_INFO_ARRAY(1, 1, 1),
SDO_ORDINATE_ARRAY(TRAWL_DEPLOYED_LON, TRAWL_DEPLOYED_LAT)
),
1,'UNIT=M') WHERE ORIG_DB = 'TRAWL';

UPDATE SAMPLE_HAUL
SET TRAWL_HAULBACK_START_LAT = 0 WHERE TRAWL_HAULBACK_START_LAT IS NULL;
UPDATE SAMPLE_HAUL
SET TRAWL_HAULBACK_START_LON = 0 WHERE TRAWL_HAULBACK_START_LON IS NULL;
UPDATE SAMPLE_HAUL
SET LAT = 0 WHERE LAT IS NULL;
UPDATE SAMPLE_HAUL
SET LON = 0 WHERE LON IS NULL;

COMMIT;

UPDATE SAMPLE_HAUL
SET DISTANCE_FISHED_1 = SDO_GEOM.SDO_DISTANCE(SDO_GEOMETRY
(2001,4326,NULL,SDO_ELEM_INFO_ARRAY(1, 1, 1),
SDO_ORDINATE_ARRAY(TRAWL_HAULBACK_START_LON, TRAWL_HAULBACK_START_LAT)),
SDO_GEOMETRY
(2001,4326,NULL,SDO_ELEM_INFO_ARRAY(1, 1, 1),
SDO_ORDINATE_ARRAY(LON, LAT)
),
1,'UNIT=M') WHERE ORIG_DB = 'TRAWL';
COMMIT;

UPDATE SAMPLE_HAUL
SET MOUTH_AREA_TRAWL = MAX_WIRE_OUT WHERE MAX_WIRE_OUT > 251;

UPDATE SAMPLE_HAUL B
SET B.MOUTH_AREA_TRAWL = (SELECT A.AREA_SHRIMP FROM MOUTH_AREA_TRAWL A WHERE A.MAXWIREOUT = B.MAX_WIRE_OUT)
WHERE GEAR_NAME = 'SHRIMP' AND NET_PATH = 0;
UPDATE SAMPLE_HAUL B
SET B.MOUTH_AREA_TRAWL = (SELECT A.AREA_SHRIMP1 FROM MOUTH_AREA_TRAWL A WHERE A.MAXWIREOUT = B.MAX_WIRE_OUT)
WHERE GEAR_NAME = 'SHRIMP' AND NET_PATH = 1;

UPDATE SAMPLE_HAUL B
SET B.MOUTH_AREA_TRAWL = (SELECT A.AREA_ANCHOV FROM MOUTH_AREA_TRAWL A WHERE A.MAXWIREOUT = B.MAX_WIRE_OUT)
WHERE B.GEAR_NAME = 'ANCHO' AND NET_PATH = 0;
UPDATE SAMPLE_HAUL B
SET B.MOUTH_AREA_TRAWL = (SELECT A.AREA_ANCHOV1 FROM MOUTH_AREA_TRAWL A WHERE A.MAXWIREOUT = B.MAX_WIRE_OUT)
WHERE B.GEAR_NAME = 'ANCHO' AND NET_PATH = 1;

COMMIT;

/* for non shrimp or ANCH catch */
UPDATE SAMPLE_HAUL
SET VOLUME_FISHED = DISTANCE_FISHED_1 * 1 WHERE NET_PATH = 1 AND ORIG_DB = 'TRAWL' AND GEAR_NAME NOT IN ('ANCHO','SHRIMP');
UPDATE SAMPLE_HAUL
SET VOLUME_FISHED = DISTANCE_FISHED_0 * 1 WHERE NET_PATH = 0 AND ORIG_DB = 'TRAWL' AND GEAR_NAME NOT IN ('ANCHO','SHRIMP');
COMMIT;

/* for shrimp or ANCH catch */
UPDATE SAMPLE_HAUL
SET VOLUME_FISHED = DISTANCE_FISHED_1 * MOUTH_AREA_TRAWL WHERE NET_PATH = 1 AND ORIG_DB = 'TRAWL' AND GEAR_NAME IN ('ANCHO','SHRIMP');
UPDATE SAMPLE_HAUL
SET VOLUME_FISHED = DISTANCE_FISHED_0 * MOUTH_AREA_TRAWL WHERE NET_PATH = 0 AND ORIG_DB = 'TRAWL' AND GEAR_NAME IN ('ANCHO','SHRIMP');
COMMIT;


UPDATE SAMPLE_HAUL
SET CPUE = TRAWL_CATCH/VOLUME_FISHED WHERE VOLUME_FISHED != 0;
UPDATE SAMPLE_HAUL
SET CPUE = NULL WHERE VOLUME_FISHED =0;
COMMIT;


DROP INDEX SAMPLE_HAUL_IX_GEOM;
CREATE INDEX SAMPLE_HAUL_IX_GEOM ON SAMPLE_HAUL(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
COMMIT;



/* sorter relationship table update */
DROP VIEW SORTER_VIEW;
CREATE VIEW SORTER_VIEW AS SELECT A.HAUL_ID,A.SORTER_FORM,A.SORTER_ID,A.COMMENTS_SORTER,B.SORTER_NAME,B.SORTER_GROUP,B.SORTER_CODE FROM SORTER A LEFT OUTER JOIN SORTER_DICT B ON A.SORTER_CODE = B.SORTER_CODE;
COMMIT;


/* specimen master relationship updator */


/* revised to remove aliases for B.STAGE AS STAGE_ZOO,B.STAGE_NAME AS STAGE_NAME_ZOO. Removing aliases created a problem in  SPECIMEN_MAIN_STAGE_VIEW. Created an update statement after the creation of SPECIMEN_MAIN_GEOM table to update STAGE_NAME for ichthyoplankton records. */
DROP VIEW SPECIMEN_TAXON_VIEW;
CREATE VIEW SPECIMEN_TAXON_VIEW AS SELECT A.*,B.TAXON_NAME,B.SIZE_NAME,B.ZOOP_VIAL_NUMBER,B.CARBON_DRY_WEIGHT,B.ORGANISM_TYPE,B.STAGE,B.STAGE_NAME,B.SEX_NAME,B.ORIG_DB TAXON_ORIG_DB,B.TAXON_SIZE FROM SPECIMEN A LEFT OUTER JOIN TAXON_CODE B ON A.TC_ID = B.TC_ID;

/* revised 11/16/2016 to add stage data to only ichthyoplankton records in SPECIMEN_MAIN_STAGE_VIEW.*/
DROP VIEW SPECIMEN_MAIN_STAGE_VIEW;
CREATE VIEW SPECIMEN_MAIN_STAGE_VIEW AS SELECT A.*,B.STAGE_GROUP,B.STAGE_COMMENTS FROM SPECIMEN_TAXON_VIEW A LEFT OUTER JOIN STAGE B ON A.STAGE_ID = B.STAGE_ID 
AND A.ORIG_DB = B.ORIG_DB ;



DROP VIEW SPECIMEN_MAIN_STOMACH_VIEW;
CREATE VIEW SPECIMEN_MAIN_STOMACH_VIEW AS SELECT A.*,B.DIGESTION,B.EXAMINER AS STOMACHEXAMINER,B.FULLNESS,B.PROCESS_DATE AS STOMACH_PROCESS_DATE,B.STOMACH_CONTENT_WT_G,B.STOMACH_DIGESTION_CODE,B.STOMACH_FULLNESS_CODE,B.STOMACH_INTACT_WT_G,B.STOMACH_LINING_WT_G FROM SPECIMEN_MAIN_STAGE_VIEW A LEFT JOIN STOMACH B ON A.SPECIMEN_ID = B.SPECIMEN_ID;

DROP VIEW SPECIMEN_MAIN_PRESERV_VIEW;
CREATE VIEW SPECIMEN_MAIN_PRESERV_VIEW AS SELECT A.*,B.FOCI_PRESERVE_ID,B.PRESERVE_COMMENTS,B.PRESERVATIVE FROM SPECIMEN_MAIN_STOMACH_VIEW A LEFT OUTER JOIN PRESERVATIVE B ON B.PRESERVE_ID = A.PRESERVE_ID;

DROP VIEW SPECIMEN_MAIN_SORTER_VIEW;
CREATE VIEW SPECIMEN_MAIN_SORTER_VIEW AS SELECT A.*,B.SORTER_NAME,B.SORTER_GROUP,B.SORTER_CODE FROM SPECIMEN_MAIN_PRESERV_VIEW A LEFT OUTER JOIN SORTER_VIEW B ON A.SORTER_ID = B.SORTER_ID;

DROP VIEW SPECIMEN_MAIN_VIEW;
CREATE VIEW SPECIMEN_MAIN_VIEW AS SELECT A.*,B.GENUS,B.SPECIES,B.SPECIES_NAME,B.SPECIES_CODE_ICHBASE,B.SPECIES_NAME_ICHBASE,B.COMMON_NAME_ICHBASE,B.ICH_ORDER_ICHBASE,B.ICH_FAMILY_ICHBASE,B.ICH_GENUS_ICHBASE,B.ICH_SPECIES_ICHBASE,B.GENUS_ICHBASE,B.SPECIES_ICHBASE,B.COMMENTS_ICHBASE,B.DATABASE_ICHBASE,B.GSID_IIS,B.PHYLOGENY_CODE_OLD_IIS,B.PHYLOGENY_CODE_IIS,B.ORDER_IIS,B.ORDER_COM_IIS,B.ORDER_CODE_IIS,B.FAMILY_IIS,B.FAMILY_COM_IIS,B.FAMILY_CODE_IIS,B.SUBFAM_IIS,B.SUBFAM_COM_IIS,B.SUBFAM_CODE_IIS,B.GENUS_IIS,B.GENUS_COM_IIS,B.GENUS_CODE_IIS,B.SPECIES_IIS,B.COMMON_NAME_IIS,B.SPECIES_CODE_IIS,B.REC_HIST_SPECIES_IIS,B.DATABASE_IIS,B.TAXON_CODE_BOB,B.SPECIES_NAME_BOB,B.DATABASE_BOB,B.OLD_PREY_CODE_TRAWL,B.PREY_CODE_TRAWL,B.SPECIES_CODE_TRAWL,B.PREY_GROUP_CODE_TRAWL,B.ALT_COMMON_NAME_TRAWL,B.GROUP_TRAWL,B.DATABASE_TRAWL,B.COMMON_NAME_RACEBASE,B.SPECIES_NAME_RACEBASE,B.SPECIES_CODE_RACEBASE,B.DATABASE_RACEBASE,B.ITIS_CODE,B.NODC_CODE,B.SPECIES_ORDER,B.GENUS_COMMON_NAME,B.FAMILY,B.FAMILY_COMMON_NAME,B.ABBR_NAME,B.ALT_GENUS,B.COMMENTS_SPECIES_CODE 
FROM SPECIMEN_MAIN_SORTER_VIEW A 
LEFT OUTER JOIN SPECIES_CODE B ON A.SPECIES_CODE_ID = B.SPECIES_CODE_ID;


DROP TABLE SPECIMEN_MAIN_GEOM;
CREATE TABLE SPECIMEN_MAIN_GEOM AS SELECT A.*,B.MONTH,B.YEAR,B.DAY,B.FOCI_GEAR_ID,B.GEAR_CODE,B.GEAR_NAME,B.GEAR_ABBREV,B.MOUTH_AREA,B.NET_INFO,B.DOOR_DIMENSIONS,B.DESCRIPTION,B.HAUL_ID,B.CRUISE,B.H_ID,B.ALT_STATION_NAME,B.HAUL_NAME,B.NET,B.FOCI_GRID,B.BOTTOM_DEPTH,B.CTD_ID,B.HAUL_PERFORMANCE,B.MESH,B.LAT,B.LON,B.PURPOSE,B.PRIMARY_NET,B.MIN_GEAR_DEPTH,B.MAX_GEAR_DEPTH,B.MIN_WIRE_OUT,B.MAX_WIRE_OUT,B.TOW_MINUTES,B.TOW_SECONDS,B.VOLUME_FILTERED,B.WIRE_ANGLE,B.DOOR,B.GEOM,B.DOOR_HEIGHT,B.DOOR_WIDTH,B.DIEL,B.NET_PATH,B.GEOGRAPHIC_AREA,B.NETMOUTH_HEIGHT_M,B.SEA_SURFACE_TEMP_C,B.TRAWL_DEPLOYED_LAT,B.TRAWL_DEPLOYED_LON,B.WATER_TEMP_AT_GEAR_DEPTH,B.GMT_DATE_TIME,B.GMT_DATE_TIME_END,B.TRAWL_DEPLOYED_GMT,B.TRAWL_HAULBACK_START_GMT,B.LON_END,B.LAT_END,B.TRAWL_HAULBACK_START_LAT,B.TRAWL_HAULBACK_START_LON,B.COMMENTS_HAUL,B.COMMENTS_SAMPLES,B.FLOWMETER_REVS,B.FLOWMETER,B.POLYGONAL_AREA,B.CRUISE_NAME,B.SHIP_NAME,B.SHIP_CRUISE_NAME,B.VOLUME_DISPLACEMENT,B.FOCI_SAMPLE_ID,B.MULTIPLE_REQ,B.NUMBER_OF_BAGS,B.NUMBER_OF_JARS,B.NUMBER_SAMPLED,B.SAMPLE_ORIG_DB,B.SUBSAMPLE_NUMBER,B.SUBSAMPLE_WEIGHT,B.TOTAL_NUMBER,B.NON_SUBSAMPLE_WEIGHT,B.VIAL_NUMBER,B.WEIGHT_UNITS,B.PROJECT,B.PI_COMPONENT,B.PROJECT_CODE,B.SAMPLE_TYPE,B.SAMPLE_DESC,B.SAMPLE_ABBREV,B.STATION_NAME,B.CPUE,B.TRAWL_CATCH,B.VOLUME_FISHED,B.DISTANCE_FISHED_0,B.DISTANCE_FISHED_1,B.EQUILIBRIUM,B.PHYTO_ASSESS_ID,B.PHYTO_ASSESS 
FROM SPECIMEN_MAIN_VIEW A, SAMPLE_HAUL B 
WHERE A.SAMPLE_ID = B.SAMPLE_ID;

/* update statement added 11/16/2016 */
UPDATE SPECIMEN_MAIN_GEOM
SET STAGE_NAME = (SELECT STAGE_NAME FROM STAGE WHERE SPECIMEN_MAIN_GEOM.STAGE_ID=STAGE.STAGE_ID)
WHERE SPECIMEN_MAIN_GEOM.ORIG_DB LIKE 'ICHBASE'
;


ALTER TABLE SPECIMEN_MAIN_GEOM
ADD SE_ANNO_CAD_DATA BLOB;
COMMIT;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'SPECIMEN_MAIN_GEOM' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('SPECIMEN_MAIN_GEOM', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;

DROP INDEX SPECIMEN_M_IX_GEOM;
CREATE INDEX SPECIMEN_M_IX_GEOM ON SPECIMEN_MAIN_GEOM(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
COMMIT;

/* POST PROCESS for ICH CALCULATIONS specimen table */


UPDATE SPECIMEN_MAIN_GEOM
SET LARVALCATCHPER10M2 =0 WHERE VOLUME_FILTERED =0;
UPDATE SPECIMEN_MAIN_GEOM
SET LARVALCATCHPER10M2 = (10*(MAX_GEAR_DEPTH - MIN_GEAR_DEPTH)/VOLUME_FILTERED)*NUMBER_CAUGHT WHERE VOLUME_FILTERED > 0;
UPDATE SPECIMEN_MAIN_GEOM
SET LARVALCATCHPER1000M3 =0 WHERE VOLUME_FILTERED =0;
UPDATE SPECIMEN_MAIN_GEOM
SET LARVALCATCHPER1000M3 = (1000 / VOLUME_FILTERED)*NUMBER_CAUGHT WHERE VOLUME_FILTERED > 0;
COMMIT;


/* SUB - specimen master relationship updator */

DROP VIEW SUBSPECIMEN_MAIN_STAGE_VIEW;
CREATE VIEW SUBSPECIMEN_MAIN_STAGE_VIEW AS SELECT A.*,B.STAGE_NAME,B.STAGE_GROUP,B.STAGE_COMMENTS
FROM SPECIMEN_SUBSAMPLE A 
LEFT OUTER JOIN STAGE B ON B.STAGE_ID = A.STAGE_ID;

DROP VIEW SUBSPECIMEN_MAIN_PRESERV_VIEW;
CREATE VIEW SUBSPECIMEN_MAIN_PRESERV_VIEW AS SELECT A.*,B.FOCI_PRESERVE_ID,B.PRESERVE_COMMENTS,B.PRESERVATIVE FROM SUBSPECIMEN_MAIN_STAGE_VIEW A LEFT JOIN PRESERVATIVE B ON B.PRESERVE_ID = A.PRESERVE_ID;

DROP VIEW SUBSPECIMEN_MAIN_SPECIES_VIEW;
CREATE VIEW SUBSPECIMEN_MAIN_SPECIES_VIEW AS SELECT A.*,B.GENUS,B.SPECIES,B.SPECIES_NAME,B.COMMON_NAME,B.SPECIES_CODE_ICHBASE,B.SPECIES_NAME_ICHBASE,B.COMMON_NAME_ICHBASE,B.ICH_ORDER_ICHBASE,B.ICH_FAMILY_ICHBASE,B.ICH_GENUS_ICHBASE,B.ICH_SPECIES_ICHBASE,B.GENUS_ICHBASE,B.SPECIES_ICHBASE,B.COMMENTS_ICHBASE,B.DATABASE_ICHBASE,B.GSID_IIS,B.PHYLOGENY_CODE_OLD_IIS,B.PHYLOGENY_CODE_IIS,B.ORDER_IIS,B.ORDER_COM_IIS,B.ORDER_CODE_IIS,B.FAMILY_IIS,B.FAMILY_COM_IIS,B.FAMILY_CODE_IIS,B.SUBFAM_IIS,B.SUBFAM_COM_IIS,B.SUBFAM_CODE_IIS,B.GENUS_IIS,B.GENUS_COM_IIS,B.GENUS_CODE_IIS,B.SPECIES_IIS,B.COMMON_NAME_IIS,B.SPECIES_CODE_IIS,B.REC_HIST_SPECIES_IIS,B.DATABASE_IIS,B.TAXON_CODE_BOB,B.SPECIES_NAME_BOB,B.DATABASE_BOB,B.OLD_PREY_CODE_TRAWL,B.PREY_CODE_TRAWL,B.SPECIES_CODE_TRAWL,B.PREY_GROUP_CODE_TRAWL,B.ALT_COMMON_NAME_TRAWL,B.GROUP_TRAWL,B.DATABASE_TRAWL,B.COMMON_NAME_RACEBASE,B.SPECIES_NAME_RACEBASE,B.SPECIES_CODE_RACEBASE,B.DATABASE_RACEBASE,B.ITIS_CODE,B.NODC_CODE,B.SPECIES_ORDER,B.GENUS_COMMON_NAME,B.FAMILY,B.FAMILY_COMMON_NAME,B.ABBR_NAME,B.ALT_GENUS,B.COMMENTS_SPECIES_CODE FROM SUBSPECIMEN_MAIN_PRESERV_VIEW A LEFT JOIN SPECIES_CODE B ON A.SPECIES_CODE_ID = B.SPECIES_CODE_ID;


DROP TABLE SUBSPECIMEN_MAIN_GEOM;
CREATE TABLE SUBSPECIMEN_MAIN_GEOM AS SELECT A.PRESERVE_ID, A.SUBSAMPLE_ID,A.SPECIES_NAME,A.SPECIES_CODE_ICHBASE,A.SPECIMEN_ID,A.LENGTH_VALUE AS RAW_VALUE,A.CORRECTED_LENGTH,A.SPECIES_CODE_ID,A.STAGE_ID,B.STAGE_NAME,A.EGG_DIAMETER,A.COMMENTS_SPECIMEN_SUBSAMPLE,B.GEOGRAPHIC_AREA,B.GEOM,B.HAUL_ID,B.CRUISE,B.STATION_NAME,B.HAUL_NAME,B.GEAR_NAME,B.GEAR_ABBREV,B.NET,B.MESH,B.HAUL_PERFORMANCE,B.GMT_DATE_TIME,B.LAT,B.LON,B.PRIMARY_NET,B.VOLUME_FILTERED,B.MIN_GEAR_DEPTH,B.MAX_GEAR_DEPTH,B.MONTH,B.DAY,B.YEAR,B.NUMBER_MEASURED_COUNTED,B.NUMBER_CAUGHT,B.LARVALCATCHPER10M2,B.LARVALCATCHPER1000M3 FROM SUBSPECIMEN_MAIN_SPECIES_VIEW A,SPECIMEN_MAIN_GEOM B WHERE B.SPECIMEN_ID = A.SPECIMEN_ID;

ALTER TABLE SUBSPECIMEN_MAIN_GEOM 
ADD SE_ANNO_CAD_DATA BLOB;
COMMIT;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'SUBSPECIMEN_MAIN_GEOM' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('SUBSPECIMEN_MAIN_GEOM', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;

DROP INDEX SUBSPECIMEN_M_IX_GEOM;
CREATE INDEX SUBSPECIMEN_M_IX_GEOM ON SUBSPECIMEN_MAIN_GEOM(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
COMMIT;

/* POST PROCESS for ICH CALCULATIONS SUBSPECIMEN table */


UPDATE SUBSPECIMEN_MAIN_GEOM
SET LARVALCATCHPER10M2 =0 WHERE VOLUME_FILTERED =0;
UPDATE SUBSPECIMEN_MAIN_GEOM
SET LARVALCATCHPER10M2 = (10*(MAX_GEAR_DEPTH - MIN_GEAR_DEPTH) /VOLUME_FILTERED)*NUMBER_CAUGHT WHERE VOLUME_FILTERED > 0;
UPDATE SUBSPECIMEN_MAIN_GEOM
SET LARVALCATCHPER1000M3 =0 WHERE VOLUME_FILTERED =0;
UPDATE SUBSPECIMEN_MAIN_GEOM
SET LARVALCATCHPER1000M3 = (1000 / VOLUME_FILTERED)*NUMBER_CAUGHT WHERE VOLUME_FILTERED > 0;

COMMIT;


/* DIET Table relationship update */
DROP VIEW DIET_SPECIES_VW; 
CREATE VIEW DIET_SPECIES_VW AS SELECT A.*,B.SPECIES_NAME FROM DIET A LEFT OUTER JOIN SPECIES_CODE B ON A.SPECIES_CODE_ID = B.SPECIES_CODE_ID;

DROP TABLE DIET_SPECIMEN;
CREATE TABLE DIET_SPECIMEN AS SELECT B.*,A.DIET_ID,A.PREY_COMMENTS,A.PREY_COUNT,A.PREY_WEIGHT,A.PREY_QUALITY,A.SPECIES_NAME AS DIET_SPECIES_NAME FROM DIET_SPECIES_VW A LEFT OUTER JOIN SPECIMEN_MAIN_GEOM B ON A.SPECIMEN_ID = B.SPECIMEN_ID;
COMMIT;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'DIET_SPECIMEN' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('DIET_SPECIMEN', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;

DROP INDEX DIET_SPECIMEN_IX_GEOM;
CREATE INDEX DIET_SPECIMEN_IX_GEOM ON DIET_SPECIMEN(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
COMMIT;


/* CTD tables */

/* SEACAT - just need to update geometry field */
UPDATE SEACAT_CTD SET GEOM = SDO_GEOMETRY(2001, 8307, SDO_POINT_TYPE(LON, LAT , NULL), NULL, NULL)
WHERE LON IS NOT NULL;

DROP TABLE SEACAT_DATA;
CREATE TABLE SEACAT_DATA AS SELECT A.*,B.CRUISE,B.GEAR_NAME,B.BOTTOM_DEPTH,B.PURPOSE,B.GEOGRAPHIC_AREA,B.GMT_DATE_TIME,B.MONTH,B.YEAR,B.DAY FROM SEACAT_CTD A LEFT OUTER JOIN HAUL B ON A.H_ID = B.H_ID;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'SEACAT_DATA' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('SEACAT_DATA', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;

DROP INDEX SEACAT_DATA_IX_GEOM;
CREATE INDEX SEACAT_DATA_IX_GEOM ON SEACAT_DATA(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
COMMIT;


/* Chlorophyll */
DROP VIEW CHLOROPHYLL_CALIBRATION_VW; 
CREATE VIEW CHLOROPHYLL_CALIBRATION_VW AS SELECT A.*,B.SLOPE,B.TAU,B.SCALING_FACTOR FROM CHLOROPHYLL A INNER JOIN FLUOROMETER_CALIBRATION B ON A.FLUROCALIBID = B.FLUROCALIBID;

DROP TABLE CHLOROPHYLL_DATA;
CREATE TABLE CHLOROPHYLL_DATA AS SELECT A.*,B.CRUISE,B.STATION_NAME,B.HAUL_NAME,B.GEAR_NAME,B.NET,B.BOTTOM_DEPTH,B.PURPOSE,B.GEOGRAPHIC_AREA,B.LAT,B.LON,B.GMT_DATE_TIME,B.MONTH,B.YEAR,B.DAY,B.GEOM FROM CHLOROPHYLL_CALIBRATION_VW A LEFT OUTER JOIN SAMPLE_HAUL B ON A.SAMPLE_ID = B.SAMPLE_ID;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'CHLOROPHYLL_DATA' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('CHLOROPHYLL_DATA', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;

DROP INDEX CHLOROPHYLL_IX_GEOM;
CREATE INDEX CHLOROPHYLL_IX_GEOM ON CHLOROPHYLL_DATA(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
COMMIT;

/* CHLOROPHYLL CALCULATION FOR BOB
CHLOROCONC_L
PHAECONC_L */

UPDATE CHLOROPHYLL_DATA
SET CHLOROCONC_L = 0 WHERE DILUTION_FACTOR = 0;
UPDATE CHLOROPHYLL_DATA
SET CHLOROCONC_L = ROUND(((SLOPE*(TAU/(TAU-1)))*ACETONE_VOL*(F_B*SCALING_FACTOR-F_A*SCALING_FACTOR)*(1/DILUTION_FACTOR))/(VOLUME_FILTERED_CHLOR/1000),3) WHERE DILUTION_FACTOR != 0;

UPDATE CHLOROPHYLL_DATA
SET PHAECONC_L = 0 WHERE DILUTION_FACTOR = 0;
UPDATE CHLOROPHYLL_DATA
SET PHAECONC_L = ROUND(((SLOPE*(TAU/(TAU-1)))*ACETONE_VOL*((TAU*F_A*SCALING_FACTOR)-F_B*SCALING_FACTOR)*(1/DILUTION_FACTOR))/(VOLUME_FILTERED_CHLOR/1000),3) WHERE DILUTION_FACTOR != 0;

/* If calculated PHAECONC_L is negative, then set it to zero - added 2016Jul14 as requested by C.Harpold. */
UPDATE CHLOROPHYLL_DATA
SET PHAECONC_L = 0 WHERE PHAECONC_L <0;

COMMIT;

/* NUTRIENT */
DROP TABLE NUTRIENT_DATA;
CREATE TABLE NUTRIENT_DATA AS SELECT A.*,B.CRUISE,B.STATION_NAME,B.HAUL_NAME,B.GEAR_NAME,B.NET,B.BOTTOM_DEPTH,B.PURPOSE,B.GEOGRAPHIC_AREA,B.LAT,B.LON,B.GMT_DATE_TIME,B.MONTH,B.YEAR,B.DAY,B.GEOM FROM NUTRIENT A LEFT OUTER JOIN SAMPLE_HAUL B ON A.SAMPLE_ID = B.SAMPLE_ID;

DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'NUTRIENT_DATA' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('NUTRIENT_DATA', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;

drop index nutrient_IX_GEOM;
create index nutrient_IX_GEOM on NUTRIENT_DATA(geom) indextype is mdsys.spatial_index;
COMMIT;

/* CTDB */
DROP TABLE CTDB_DATA;
CREATE TABLE CTDB_DATA AS SELECT A.*,B.CRUISE,B.STATION_NAME,B.HAUL_NAME,B.GEAR_NAME,B.NET,B.BOTTOM_DEPTH,B.PURPOSE,B.MONTH,B.YEAR,B.DAY,B.GEOGRAPHIC_AREA,B.LAT,B.LON,B.GMT_DATE_TIME,B.GEOM,B.SE_ANNO_CAD_DATA FROM CTDB A LEFT OUTER JOIN HAUL B ON A.H_ID = B.H_ID;
DELETE FROM USER_SDO_GEOM_METADATA 
  WHERE TABLE_NAME = 'CTDB_DATA' AND COLUMN_NAME = 'GEOM' ;

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) 
  VALUES ('CTDB_DATA', 'GEOM', 
    MDSYS.SDO_DIM_ARRAY 
      (MDSYS.SDO_DIM_ELEMENT('X', -180.000000000, 180.000000000, 0.000000050), 
       MDSYS.SDO_DIM_ELEMENT('Y', -90.000000000, 90.000000000, 0.000000050)  
     ), 
     8307); 
COMMIT;

DROP INDEX CTDB_IX_GEOM;
CREATE INDEX CTDB_IX_GEOM ON CTDB_DATA(GEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
COMMIT;


/* end post processing script */




/* Run the zoop calculations after the post processing script. 
last modified version 2014Mar13.sql

Update calculated values for Zoop/BOB data
Should be run every time a change is made to zoop data

March 2014

ASA & NOAA

***This needs to be run in the order below

**Setting this will write to console on SQLPLUS
*/
SET ECHO ON
SET SERVEROUTPUT ON


/* Estimated number Per Sample */
update specimen_main_geom
set EST_NUM_PERSAMPLE = ROUND(NUMBER_MEASURED_COUNTED*(1/SUBSAMPLE_FACTOR),4)
where ORIG_DB = 'BOB';
commit;
/* Done*/


/* 
update procedure
	will list out any issues with certain specimen Ids
may take a little while (up to a day)
Many values will be 0 if the volume filtered or sample volume is 0 ****
*/

CREATE OR REPLACE FUNCTION is_number( p_str IN VARCHAR2 )
  RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE
IS
  l_num NUMBER;
BEGIN
  l_num := to_number( p_str );
  RETURN 'Y';
EXCEPTION
  WHEN value_error THEN
    RETURN 'N';
END is_number;
/

/* changed EST_NUM_PERM2 = 0 to EST_NUM_PERM2 = NULL - 2016FEB04 KBAHL */
/* changed EST_NUM_PERM3 = 0 to EST_NUM_PERM3 = NULL - 2016FEB04 KBAHL */
    update specimen_main_geom set EST_NUM_PERM3 = NULL;
    update specimen_main_geom set EST_NUM_PERM2 = NULL;

    update specimen_main_geom set EST_NUM_PERM3 = ROUND(EST_NUM_PERSAMPLE/volume_filtered,10) where volume_filtered > 0 and gear_abbrev != 'CTDB';
    update specimen_main_geom set EST_NUM_PERM2 = ROUND(EST_NUM_PERM3*(MAX_GEAR_DEPTH -MIN_GEAR_DEPTH),10) where volume_filtered > 0 and gear_abbrev != 'CTDB';

/* Revised 	EST_NUM_PERM3 math - added EST_NUM_PERSAMPLE to the math equation. - 2016FEB18 KBAHL */
    update specimen_main_geom set EST_NUM_PERM3 = ROUND(EST_NUM_PERSAMPLE*(1000*(1/sample_volume)),10) where sample_volume > 0 and gear_abbrev = 'CTDB';
    update specimen_main_geom set EST_NUM_PERM2 = ROUND(EST_NUM_PERM3*(MAX_GEAR_DEPTH -MIN_GEAR_DEPTH),10) where sample_volume > 0 and gear_abbrev = 'CTDB';

/* changed DIS_PERVOLM3 = 0 to DIS_PERVOLM3 = NULL - 2016FEB04 KBAHL */	
/* changed DIS_PERVOLM2 = 0 to DIS_PERVOLM2 = NULL - 2016FEB04 KBAHL */	
    update specimen_main_geom set DIS_PERVOLM3 = NULL;
    update specimen_main_geom set DIS_PERVOLM2 = NULL;

	update specimen_main_geom set DIS_PERVOLM3 = ROUND(to_number(VOLUME_DISPLACEMENT)/volume_filtered,10) 
	where ORIG_DB LIKE 'BOB' AND (volume_filtered > 0 and to_number(VOLUME_DISPLACEMENT) > 0 and volume_filtered is not null and VOLUME_DISPLACEMENT is not null); 
	
    update specimen_main_geom set DIS_PERVOLM2 = ROUND(DIS_PERVOLM3*(MAX_GEAR_DEPTH - MIN_GEAR_DEPTH),10) 
    where ORIG_DB LIKE 'BOB' AND (volume_filtered > 0 and to_number(VOLUME_DISPLACEMENT) > 0);
    

    update specimen_main_geom set DIS_PERVOLM3 = null where volume_filtered <= 0 OR to_number(VOLUME_DISPLACEMENT) <= 0 OR volume_filtered IS NULL OR VOLUME_DISPLACEMENT IS NULL; 
    update specimen_main_geom set DIS_PERVOLM2 = null where volume_filtered <= 0 OR to_number(VOLUME_DISPLACEMENT) <= 0 OR volume_filtered IS NULL OR VOLUME_DISPLACEMENT IS NULL; 
 
 commit;


/* 
update for Bio Mass calculations
 
update procedure
	will list out any issues with certain specimen Ids
may take a little while 
*/

    /* Estimated biomass update*/
    update specimen_main_geom set BIO_MASS_PERSAMPLE = 0 where CARBON_DRY_WEIGHT IS NULL;
    update specimen_main_geom set BIO_MASS_PERSAMPLE = ROUND(CARBON_DRY_WEIGHT*EST_NUM_PERSAMPLE,4) where CARBON_DRY_WEIGHT IS NOT NULL;

/* 
update procedure
	will list out any issues with certain specimen Ids
may take a little while 
*/

    update specimen_main_geom set BIO_MASS_PERM3 = 0 where  volume_filtered IS NULL OR volume_filtered = 0;
    update specimen_main_geom set BIO_MASS_PERM3 = BIO_MASS_PERSAMPLE/volume_filtered where volume_filtered > 0 and volume_filtered IS NOT NULL AND volume_filtered != 0;
    
    update specimen_main_geom set BIO_MASS_PERM2 = BIO_MASS_PERM3*(MAX_GEAR_DEPTH -MIN_GEAR_DEPTH) where volume_filtered > 0 and volume_filtered IS NOT NULL AND volume_filtered != 0;

commit;


/* 
NUMBER_MEASURED_COUNTED =9999 is a notation for presence/absence.
added command line 2016Feb12 by KBahl


UPDATE SPECIMEN_MAIN_GEOM
SET 
BIO_MASS_PERSAMPLE = NULL, 
BIO_MASS_PERM2 = NULL, 
BIO_MASS_PERM3 = NULL 
WHERE ORIG_DB LIKE 'BOB' AND NUMBER_MEASURED_COUNTED =9999;
*/

/* 
Instead of using NUMBER_MEASURED_COUNTED =9999 as a notation for presence/absence, I created attributes ZOOP_EUPHAUSIID_EGG='Y' OR ZOOP_COPEPOD_NAUPLII='Y' in table SPECIMEN. - 2016Oct03 KBahl
*/

UPDATE SPECIMEN_MAIN_GEOM
SET 
BIO_MASS_PERSAMPLE = NULL, 
BIO_MASS_PERM2 = NULL, 
BIO_MASS_PERM3 = NULL 
WHERE ORIG_DB LIKE 'BOB' AND NUMBER_MEASURED_COUNTED IS NULL AND (ZOOP_EUPHAUSIID_EGG='Y' OR ZOOP_COPEPOD_NAUPLII='Y')
;



commit;


/* Integrated Depth Calculations
ASA and NOAA
To Be run on the Chlorphyll table after table is updated
Revised 2016 September
*/

set serveroutput on

/* create data type for iteration*/
CREATE OR REPLACE TYPE previous_value AS OBJECT( 
   sample_depth          NUMBER(15,5),
   PHAECONC_L            NUMBER(20,4),
   CHLOROCONC_L           NUMBER(12,4) );
/

declare
sql1 varchar2(400);
sql2 varchar2(400);
sql3 varchar2(400);
sql4 varchar2(400);
v_count number;
ph_number number;
chl_number number;
i   NUMBER := 0;

previous_value_array previous_value;

begin

/* Loop through all the hauls in the chlorophyll table*/
for haul in (select distinct haul_id,h_id from chlorophyll_data)

loop

i := 0;
ph_number := 0;
chl_number := 0;

sql2 := 'drop view t'||haul.h_id;
sql1 := 'create view t'||haul.h_id||' as (select * from chlorophyll_data where h_id = '||haul.h_id||')';

/* dbms_output.put_line(sql1);
dbms_output.put_line(sql2);

Create View for each haul
execute immediate sql1;*/

	begin

		select count(*) into v_count from chlorophyll_data where h_id = haul.h_id;

		/* Only update for more then 4 depth values*/
		IF (v_count > 4)
		
		THEN
		/* loop through each depth value*/
		for chlorValue in (select sample_depth,PHAECONC_L,CHLOROCONC_L from chlorophyll_data where h_id = haul.h_id order by sample_depth)
		loop
			/* first depth value*/
			IF i = 0
			THEN
			/*don't do anything*/
			ph_number := ph_number;
			chl_number := chl_number;

			ELSIF i = 1
			THEN
			ph_number := ph_number +(chlorValue.PHAECONC_L + previous_value_array.PHAECONC_L) * ((chlorValue.sample_depth - previous_value_array.sample_depth)/2);
			chl_number := chl_number +(chlorValue.CHLOROCONC_L + previous_value_array.CHLOROCONC_L) *((chlorValue.sample_depth - previous_value_array.sample_depth)/2);
			/* last depth value*/
			ELSIF i = v_count
			THEN
			
			ph_number := ph_number +(chlorValue.PHAECONC_L + previous_value_array.PHAECONC_L) * ((chlorValue.sample_depth - previous_value_array.sample_depth)/2);
			chl_number := chl_number +(chlorValue.CHLOROCONC_L + previous_value_array.CHLOROCONC_L) * ((chlorValue.sample_depth - previous_value_array.sample_depth)/2);
			
			/* 
			ph_number := ph_number + previous_value_array.PHAECONC_L * ((chlorValue.sample_depth - previous_value_array.sample_depth));
			chl_number := chl_number + previous_value_array.CHLOROCONC_L * ((chlorValue.sample_depth - previous_value_array.sample_depth));
			all other values*/
			ELSE
			ph_number := ph_number +(chlorValue.PHAECONC_L + previous_value_array.PHAECONC_L) * ((chlorValue.sample_depth - previous_value_array.sample_depth))/2;
			chl_number := chl_number +(chlorValue.CHLOROCONC_L + previous_value_array.CHLOROCONC_L) * ((chlorValue.sample_depth - previous_value_array.sample_depth)/2);

			END IF;

			i := i + 1;
			previous_value_array :=previous_value(chlorValue.sample_depth,chlorValue.PHAECONC_L,chlorValue.CHLOROCONC_L);
			
			dbms_output.put_line('Depth:'||previous_value_array.sample_depth||' Completed.');
			dbms_output.put_line('chl_number:'||chl_number||' Completed.');

		END LOOP;
		
		/* Execute the depth update*/
		sql3 :='update chlorophyll_data set INTCHL = '||chl_number||' where h_id = '||haul.h_id;
		sql4 :='update chlorophyll_data set INTPHAEO = '||ph_number||' where h_id = '||haul.h_id;

		execute immediate sql3;
		execute immediate sql4;

		dbms_output.put_line(haul.h_id||' Completed.');
		END IF;
	end;

/* Delete the view
execute immediate sql2;
*/


END LOOP;

commit;

END;
/

commit;
